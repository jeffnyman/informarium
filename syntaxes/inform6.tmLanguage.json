{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "scopeName": "source.inform6",
  "name": "Inform 6",
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#string"
    },
    {
      "include": "#routine"
    },
    {
      "include": "#keyword"
    },
    {
      "include": "#operator"
    },
    {
      "include": "#constant"
    }
  ],
  "repository": {
    "comment": {
      "name": "comment.line.inform6",
      "match": "!.*$"
    },
    "string": {
      "patterns": [
        {
          "name": "string.quoted.double.inform6",
          "begin": "\"",
          "beginCaptures": {
            "0": {
              "name": "punctuation.double.quote.begin.inform6"
            }
          },
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "punctuation.double.quote.end.inform6"
            }
          }
        },
        {
          "name": "string.quoted.single.inform6",
          "begin": "'",
          "beginCaptures": {
            "0": {
              "name": "punctuation.single.quote.begin.inform6"
            }
          },
          "end": "(//(?:p)?)?(')",
          "endCaptures": {
            "1": {
              "name": "constant.character.escape.inform6"
            },
            "2": {
              "name": "punctuation.single.quote.end.inform6"
            }
          }
        }
      ]
    },
    "routine": {
      "name": "meta.routine.inform6",
      "begin": "^\\s*\\[",
      "end": "\\]",
      "captures": {
        "0": {
          "name": "keyword.other.directive.inform6"
        }
      },
      "patterns": [
        {
          "include": "#routineHeader"
        },
        {
          "include": "#routineBody"
        }
      ]
    },
    "routineHeader": {
      "begin": "([a-zA-Z_]\\w*)\\b",
      "beginCaptures": {
        "1": {
          "name": "entity.name.function.inform6"
        }
      },
      "end": "(?=;)",
      "patterns": [
        {
          "name": "variable.parameter.inform6",
          "match": "\\b[a-zA-Z_]\\w*\\b"
        }
      ]
    },
    "routineBody": {
      "begin": "(?=;)",
      "end": "(?=\\])",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#string"
        },
        {
          "include": "#keyword"
        },
        {
          "include": "#operator"
        },
        {
          "include": "#constant"
        }
      ]
    },
    "keyword": {
      "patterns": [
        {
          "name": "keyword.control.inform6",
          "match": "\\b(box|break|continue|default|do|else|font\\s+(on|off)|for|give|if|inversion|jump|new_line|objectloop|print|print_ret|quit|read|remove|restore|return|rfalse|rtrue|save|spaces|string|style\\s+(roman|bold|underline|reverse|fixed)|switch|until|while)\\b"
        },
        {
          "match": "\\b(move)\\s+([a-zA-Z_]\\w*)\\s+(to)\\b",
          "captures": {
            "1": {
              "name": "keyword.control.inform6"
            },
            "3": {
              "name": "keyword.control.inform6"
            }
          }
        }
      ]
    },
    "operator": {
      "patterns": [
        {
          "name": "keyword.operator.arithmetic.inform6",
          "match": "\\+|-|\\*|/|%"
        },
        {
          "name": "keyword.operator.comparison.inform6",
          "match": "==|~=|<=|<|>=|>"
        },
        {
          "name": "keyword.operator.assignment.inform6",
          "match": "="
        },
        {
          "name": "keyword.operator.increment.inform6",
          "match": "\\+\\+"
        },
        {
          "name": "keyword.operator.decrement.inform6",
          "match": "--"
        },
        {
          "name": "keyword.operator.separator.inform6",
          "match": ","
        },
        {
          "name": "keyword.operator.logical.inform6",
          "match": "&&|\\|\\||~~"
        },
        {
          "name": "keyword.operator.bitwise.inform6",
          "match": "&|\\||~"
        }
      ]
    },
    "constant": {
      "comment": "Literal quantities written down in the source code are called constants.",
      "patterns": [
        {
          "name": "constant.numeric.integer.binary.inform6",
          "match": "\\$\\$[01]+\\b"
        },
        {
          "name": "constant.numeric.integer.hexadecimal.inform6",
          "match": "\\$[0-9a-fA-F]+\\b" 
        },
        {
          "name": "constant.numeric.integer.negative.inform6",
          "match": "(\\b|-)\\d+\\b"
        },
        {
          "name": "constant.numeric.float.inform6",
          
          "match": "\\$[\\+-]\\d+(\\.\\d+)?(e[\\+-]?\\d+)?\\b"
        },
        {
          "comment": "The NULL does show up in the library but it's not documented anywhere officially that I can see.",
          "name": "constant.language.inform6",
          "match": "\\b(false|nothing|NULL|true)\\b"
        }
      ]
    }
  }
}
